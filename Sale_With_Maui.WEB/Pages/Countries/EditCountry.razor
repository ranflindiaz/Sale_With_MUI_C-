@page "/countries/edit/{id:int}"
@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService swal

<h3>Editar Pais</h3>

@if(country is null)
{
    <p>Cargando...</p>
}
else
{
    <CountryForm @ref="countryForm" Country="country" OnValidSubmit="EditAsync" ReturnAction="Return" />
}

@code {
    private Country? country;
    private CountryForm? countryForm;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var responseHttp = await repository.Get<Country>($"/api/countries/{Id}");

        if (responseHttp.Error)
        {

            if (responseHttp.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/countries");
                return;
            }
            var messageError = await responseHttp.GetErrorMessage();
            await swal.FireAsync("Error", messageError, SweetAlertIcon.Error);
        }

        country = responseHttp.Response;

    }

    public async Task EditAsync()
    {
        var responseHTTP = await repository.Put("api/countries", country);

        if (responseHTTP.Error)
        {
            var mensajeError = await responseHTTP.GetErrorMessage();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
            return;
        }
        countryForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/countries");
    }

    private void Return()
    {
        countryForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/countries");
    }
}

